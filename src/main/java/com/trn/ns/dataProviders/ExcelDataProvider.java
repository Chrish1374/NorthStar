package com.trn.ns.dataProviders;import java.io.File;import java.lang.reflect.Method;import java.util.Map;import jxl.Sheet;import jxl.Workbook;import org.testng.annotations.DataProvider;public class ExcelDataProvider {	@DataProvider(name = "getDataFromExcelFile")	public static Object [] [] getDataFromExcelFile(Method testMethod) throws Exception {				Map<String, String> arguments = DataProviderUtils.resolveDataProviderArguments(testMethod);		String sheetName="";				Object [][] data1 = null;					try{		if(!arguments.get("sheetName").isEmpty())			data1 = ExcelDataProvider.getLinesFromExcelFile(arguments.get("sheetName"),arguments.get("filePath"));		}catch(NullPointerException e){			data1 = ExcelDataProvider.getLinesFromExcelFile(testMethod,arguments.get("filePath"));		}		return data1;	}	   	private static Object[][] getLinesFromExcelFile(Method testMethod,String filePath)throws Exception {   		   		   		   						String[] temp = filePath.split("/");						String tempFileName =temp[temp.length-1];			String[] fullFileName = tempFileName.split("\\.");			String fileName = fullFileName[0];									Workbook workbook = Workbook.getWorkbook(new File(filePath));		Sheet sheet = workbook.getSheet(testMethod.getName());        int startRow = 1;        int startCol = 0;        int ci,cj =0 ;        int totalRows = 0;         totalRows=sheet.getRows();        int totalCols = sheet.getColumns();//        System.out.println("total cols = " + totalCols);//        System.out.println("total rows = " + totalRows);        String[][] tabArray=new String[totalRows-1][totalCols];        ci=0;        for (int i=startRow;i<totalRows;i++,ci++)        {            cj=0;            for (int j=startCol;j<totalCols;j++, cj++)            {                tabArray[ci][cj]=sheet.getCell(j,i).getContents();//                System.out.println(tabArray[ci][cj]);            }        }        return tabArray;			}	private static Object [][] getLinesFromExcelFile(Method testMethod) throws Exception{		Map<String, String> arguments= DataProviderUtils.resolveDataProviderArguments(testMethod);		return ExcelDataProvider.getLinesFromExcelFile(testMethod,arguments.get("filePath") );	}	private static Object[][] getLinesFromExcelFile(String testMethod,String filePath)throws Exception {		 		   			//   			System.out.println(filePath);   						String[] temp = filePath.split("/");			//			for(String n : temp)//				System.out.println(n);//						String tempFileName =temp[temp.length-1];			String[] fullFileName = tempFileName.split("\\.");			//			for(String n : fullFileName)//				System.out.println(n); 						/*String fileName = fullFileName[0];								String newFileName  = fileName+"_LINUX";						filePath = filePath.replace(fileName, newFileName);*/													Workbook workbook = Workbook.getWorkbook(new File(filePath));		Sheet sheet = workbook.getSheet(testMethod);        int startRow = 1;        int startCol = 0;        int ci,cj =0 ;        int totalRows = 0;         totalRows=sheet.getRows();        int totalCols = sheet.getColumns();//        System.out.println("total cols = " + totalCols);//        System.out.println("total rows = " + totalRows);        String[][] tabArray=new String[totalRows-1][totalCols];        ci=0;        for (int i=startRow;i<totalRows;i++,ci++)        {            cj=0;            for (int j=startCol;j<totalCols;j++, cj++)            {                tabArray[ci][cj]=sheet.getCell(j,i).getContents();//                System.out.println(tabArray[ci][cj]);            }        }        return tabArray;			}	}